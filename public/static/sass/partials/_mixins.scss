// Border test
// --------------------------------------------------

// @include sprite-ico("ico");

@mixin bt() {
  border: 1px solid #C00;
}

// Font-size
// --------------------------------------------------

@mixin font-size($sizeValue: 1.6){
  font-size: ($sizeValue * 10) + px;
  // font-size: $sizeValue + rem;
}

// Line-height
// --------------------------------------------------

@mixin line-height($sizeValue: 1.6){
  line-height: ($sizeValue * 10) + px;
  // line-height: $sizeValue + rem;
}

// Opactity
// --------------------------------------------------

@mixin opacity($opacity) {
  opacity: $opacity;
  filter: alpha(opacity=$opacity * 100);
}

// Clearing
// --------------------------------------------------

@mixin clearfix() {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
  }
  &:after {
    clear: both;
  }
}

// IE7 inline-block
// --------------------------------------------------

@mixin ie7-inline-block() {
  *display: inline;
  *zoom: 1;
}

// Box center
// --------------------------------------------------

@mixin center-block() {
  display: block;
  margin: 0 auto;
}

// CSS txt replacement
// --------------------------------------------------

@mixin hide-text() {
  overflow: hidden;
  text-align: left;
  text-indent: -119988px;
}

// CSS txt replacement
// --------------------------------------------------

@mixin hide-txt() {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}

// CSS image replacement
// --------------------------------------------------

@mixin hide() {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

// CSS hidden replacement
// --------------------------------------------------

@mixin hidden() {
  position: absolute !important;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height :  1px !important;
  width  :  1px !important;
  margin : -1px !important;
  padding:  0   !important;
  border: none;
}

// Box sizing
// --------------------------------------------------

@mixin box-sizing {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  // *behavior: url(../javascripts/boxsizing.htc);
}

// Image size
// --------------------------------------------------

@mixin img-size($image) {
  width: image-width($image);
  height: image-height($image);
}

// Sizing shortcuts
// --------------------------------------------------

@mixin size($height, $width) {
  width: $width;
  height: $height;
}

@mixin square($size) {
  @include size($size, $size);
}

// RWD
// --------------------------------------------------

// $sprites: sprite-map("sprites/*.png");
// $sprites-retina: sprite-map("sprites-retina/*.png");

@mixin spr-bg($name) {
  background-image: sprite-url($sprites);
  background-position: sprite-position($sprites, $name);
  background-repeat: no-repeat;
  display: block;
  height: image-height(sprite-file($sprites, $name));
  width: image-width(sprite-file($sprites, $name));
  @media (-webkit-min-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 3/2), (min-device-pixel-ratio: 2) {
    // Workaround for https://gist.github.com/2140082
    @if (sprite-position($sprites, $name) != sprite-position($sprites-retina, $name)) {
      $ypos: round(nth(sprite-position($sprites-retina, $name), 2) / 2);
      background-position: 0 $ypos;
    }
    // Grab size of non-retina sprite image.
    @include background-size(image-width(sprite-path($sprites)) image-height(sprite-path($sprites)));
    background-image: sprite-url($sprites-retina);
  }
}

@mixin image-2x($image, $width, $height, $pl, $pt) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background: url($image);
    background-size: $width $height;
    background-repeat: no-repeat;
    background-position: $pl $pt;
  }
}

@mixin breakpoint($point) {
  @if $point == large {
    @media (min-width: 64.375em) { @content; }
  }
  @else if $point == medium {
    @media (min-width: 479px) { @content; }
  }
  @else if $point == mediumpush {
    @media (max-width: 450px)  { @content; }
  }
  @else if $point == small {
    @media (min-width: 319px)  { @content; }
  }
}

// Sprites shortcuts
// --------------------------------------------------

@mixin sp-ico($name,$resize:'auto') {
  @include ico-sprite($name);
  height: ico-sprite-height($name);
  width: ico-sprite-width($name);
  @if $resize != 'auto'{
    @include sprite-resized($ico-sprites, $name, $resize);
  }
}

@mixin sp-logo($name,$resize:'auto') {
  @include logo-sprite($name);
  height: logo-sprite-height($name);
  width: logo-sprite-width($name);
  @if $resize != 'auto'{
    @include sprite-resized($ico-sprites, $name, $resize);
  }
}

@mixin sprite-bg($name,$resize:'auto') {
  @include bg-sprite($name);
  height: bg-sprite-height($name);
  width: bg-sprite-width($name);
  @if $resize != 'auto'{
    @include sprite-resized($ico-sprites, $name, $resize);
  }
}

// @mixin sprite-resized($map, $sprite, $percent) {
//   $spritePath   : sprite-path($map);
//   $spriteHeight : image-height($spritePath);
//   $spriteWidth  : image-width($spritePath);
//   $height       : image-height(sprite-file($map, $sprite));
//   $width        : image-width(sprite-file($map, $sprite));
//   @include background-size(ceil($spriteWidth * ($percent/100)) ceil($spriteHeight * ($percent/100)));
//   background-position : 0 floor(nth(sprite-position($map, $sprite), 2)  * ($percent/100) );
//   height              : floor($height*($percent/100));
//   width               : ceil($width*($percent/100));
// }

// Absolute shortcuts
// --------------------------------------------------

@mixin absolute-left ($top, $left) {
  position: absolute;
  top: $top;
  left: $left;
}

@mixin absolute-right ($top, $right) {
  position: absolute;
  top: $top;
  right: $right;
}

@mixin absolute-b-right ($bottom, $right) {
  position: absolute;
  bottom: $bottom;
  right: $right;
}

@mixin absolute-b-left ($bottom, $left) {
  position: absolute;
  bottom: $bottom;
  left: $left;
}

// Placeholder
// --------------------------------------------------

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }

  &:-moz-placeholder { /* Firefox 18- */
    @content;
  }

  &::-moz-placeholder {  /* Firefox 19+ */
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }
}